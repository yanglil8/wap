{"version":3,"file":"js/3431.83bf5ce0.js","mappings":"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","sources":["webpack://wap/./src/universalPage/formDetails/FormDetails.vue","webpack://wap/src/universalPage/formDetails/FormDetails.vue","webpack://wap/./src/universalPage/formDetails/FormDetails.vue?5015","webpack://wap/./src/universalPage/formDetails/FormDetails.vue?808c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('popup',{ref:\"popup\",attrs:{\"hasBtns\":false}},[_c('form',{staticClass:\"h-form\"},[_vm._l((_vm.config),function(item,index){return _c('item',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.Visibility.includes(1)),expression:\"item.Visibility.includes(1)\"}],key:index,attrs:{\"name\":item.FieldName,\"width\":item.ItemWidth||'xl',\"pd\":\"\"}},[_c('h-renderItem',{attrs:{\"render\":item.render,\"info\":_vm.info}})],1)}),_c('h-renderItem',{attrs:{\"render\":_vm.customRender,\"info\":_vm.info}})],2)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <popup ref=\"popup\" :hasBtns=\"false\">\r\n        <form class=\"h-form\">\r\n            <item v-for=\"(item,index) in config\" :key=\"index\" :name=\"item.FieldName\" :width=\"item.ItemWidth||'xl'\" pd v-show=\"item.Visibility.includes(1)\">\r\n                <h-renderItem :render=item.render :info=\"info\" />\r\n            </item>\r\n            <h-renderItem :render=customRender :info=\"info\" />\r\n        </form>\r\n    </popup>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"FormDetails\",\r\n    props: {\r\n        apis: {\r\n            edit: null,\r\n            create: null,\r\n            details: null\r\n        },\r\n        FormsCode: {\r\n            tyep: String\r\n        },\r\n        customRender: {\r\n            type: Function,\r\n            default: () => { }\r\n        }\r\n    },\r\n    components: {},\r\n    data() {\r\n        return {\r\n            info: {\r\n                FStatus: 1\r\n            },\r\n            config: []\r\n        }\r\n    },\r\n    methods: {\r\n        async start(row) {\r\n            this.init()\r\n            this.$refs.popup.startLoading()\r\n            this.$refs.popup.start(\"详情\")\r\n            await this.getDetails(row.Id)\r\n            if (this.FormsCode) await this.showItems()\r\n            this.fileQueryList(row.Id)\r\n\r\n        },\r\n        getDetails(Id) {\r\n            return this.apis.details({ Id }).then(res => {\r\n                if (res) {\r\n                    res.data.isDetails = true\r\n                    this.info = res.data\r\n                }\r\n            })\r\n        },\r\n        /*\r\n            1:普通文本\r\n            2:数值\r\n            3:日期\r\n            5:固定值下拉\r\n            6:单选\r\n            7:基础资料 \r\n            9:基础资料多选\r\n            11:基础资料树形单选\r\n            13:富文本\r\n        */\r\n        async showItems() {\r\n            let form = await this._api.BOS_FormsDetail({ FormCode: this.FormsCode })\r\n            let formList = form.data.FieldsList.sort((a, b) => a.RowId - b.RowId)\r\n\r\n            if (!form || !formList.length) return this.$refs.popup.closeLoading()\r\n\r\n            for (let it of formList) {\r\n\r\n                if (it.Options && it.Options.includes(\"{\")) it.Options = JSON.parse(it.Options)\r\n\r\n                it.Visibility = it.Visibility ? JSON.parse(it.Visibility) : []\r\n\r\n                if (!it.ApiUrl) {\r\n                    it.render = this.getRender(it)\r\n                } else {\r\n                    it.render = (h, info) => {\r\n                        return (\r\n                            <el-input v-model={info[it.FieldId]} placeholder={it.Placeholder} />\r\n                        )\r\n                    }\r\n\r\n                    let result = await this._api.customApi(it.ApiUrl)\r\n                    if (result) {\r\n                        it.render = (h, info) => {\r\n                            if (it.FieldType == 7) {\r\n                                return (\r\n                                    <span>{result.data.filter(iter => iter.Id == info[it.FieldId]).map(iter => iter[it.Options.label]).join(\"、\")}</span>\r\n                                )\r\n                            } else if (it.FieldType == 9) {\r\n                                return (\r\n                                    <treeInputMultiple dataList={result.data} fieldName={it.Options.label} placeholder={it.Placeholder} v-model={info[it.FieldId]} />\r\n                                )\r\n                            } else if (it.FieldType == 11) {\r\n                                let data = this.$u.arraytoTree(result.data)\r\n                                return (\r\n                                    <span>{result.data.filter(iter => iter.Id == info[it.FieldId]).map(iter => iter[it.Options.label]).join(\"、\")}</span>\r\n                                )\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.config = form.data.FieldsList\r\n            this.$refs.popup.closeLoading()\r\n        },\r\n\r\n        getRender({ FieldType, FieldId, Placeholder, Options, Unit, MaxValue, MinValue }) {\r\n            return (h, info) => {\r\n                let ele = <span></span>\r\n                switch (FieldType) {\r\n                    case 1:\r\n                        ele = <span>{info[FieldId]}</span>\r\n                        break\r\n                    case 2:\r\n                        ele = <span>{info[FieldId]}{Unit}</span>\r\n                        break\r\n                    case 23:\r\n                        ele = <span>{info[FieldId]}</span>\r\n                        break\r\n                    case 3:\r\n                        ele = <span>{info[FieldId] ? this.$time(info[FieldId]).format(\"YYYY-MM-DD\") : \"\"}</span>\r\n                        break\r\n                    case 4:\r\n                        ele = <span>{info[FieldId] ? this.$time(info[FieldId]).format(\"YYYY-MM-DD HH:mm\") : \"\"}</span>\r\n                        break\r\n                    case 5:\r\n                        ele = <span>{Options.filter(it => it.value == info[FieldId]).map(it => it.label).join(\"、\")}</span>\r\n                        break\r\n                    case 15:\r\n                        ele = <h-upload limitCount=\"10\" ref=\"upLoad\" />\r\n                        break\r\n                    case 17:\r\n                        ele = <h-upload limitCount={MaxValue} ref=\"upLoad\" type=\"img\" readonly />\r\n                        break\r\n                    case 19:\r\n                        ele = <span>{info[Options]}</span>\r\n                        break\r\n                }\r\n                return (\r\n                    ele\r\n                )\r\n            }\r\n        },\r\n        fileQueryList(SourceId) {\r\n            if (this.$refs.upLoad) this._api.fileQueryList({ SourceId }).then(res => {\r\n                if (res) {\r\n                    this.$refs.upLoad.fileList = res.data\r\n                }\r\n            })\r\n        },\r\n    },\r\n    mounted() { }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FormDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FormDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FormDetails.vue?vue&type=template&id=12c6dd32&scoped=true&\"\nimport script from \"./FormDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./FormDetails.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"12c6dd32\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","ref","attrs","staticClass","_l","config","item","index","directives","name","rawName","value","Visibility","includes","expression","key","FieldName","ItemWidth","info","customRender","staticRenderFns","props","apis","edit","create","details","FormsCode","tyep","type","default","components","data","FStatus","methods","getDetails","Id","res","FormCode","it","result","getRender","FieldType","FieldId","Placeholder","Options","Unit","MaxValue","MinValue","ele","fileQueryList","SourceId","mounted","component"],"sourceRoot":""}